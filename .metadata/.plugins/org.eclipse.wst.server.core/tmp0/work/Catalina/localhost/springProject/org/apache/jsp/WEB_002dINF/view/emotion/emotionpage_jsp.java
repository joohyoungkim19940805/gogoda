/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.60
 * Generated at: 2021-02-25 15:32:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.emotion;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import g.g.d.com.food.vo.FoodVO;
import java.util.List;
import java.util.ArrayList;
import g.g.d.com.emotion.common.RandomNumbering;
import g.g.d.com.movie.vo.MovieVO;

public final class emotionpage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/00.KOSMO72/eclipse_springproject_work/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/springProject/WEB-INF/lib/spring-webmvc-4.3.16.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1523252374000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-4.3.16.RELEASE.jar", Long.valueOf(1609528656000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("g.g.d.com.food.vo.FoodVO");
    _jspx_imports_classes.add("g.g.d.com.movie.vo.MovieVO");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("g.g.d.com.emotion.common.RandomNumbering");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 request.setCharacterEncoding("UTF-8"); 
	Object objFood=request.getAttribute("foodList");
	List<FoodVO> foodList=null;
	if(objFood!=null){
		foodList=(List)objFood;	
	}
	Object objMovie=request.getAttribute("movieList");
	ArrayList<MovieVO> movieList=null;
	if(objMovie!=null){
		movieList=(ArrayList)objMovie;
	}
	System.out.println(movieList);
	//System.out.print(foodList.get(0).getFnum());
	int foodNumber[]= new RandomNumbering().RandomNumber(10, foodList);
	/*음식*/
	StringBuffer foodIndexData=new StringBuffer();//1
	StringBuffer foodNameData=new StringBuffer();//2
	StringBuffer foodOneservingData=new StringBuffer();//1회 제공량//3
	StringBuffer foodKcalData=new StringBuffer();//100g당 칼로리//4
	StringBuffer foodBitternessData=new StringBuffer();//쓴맛/담백함//5
	StringBuffer foodUmamiData=new StringBuffer();//감칠맛//6
	StringBuffer foodSaltyData=new StringBuffer();//짠맛//7
	StringBuffer foodSweetnessData=new StringBuffer();//단맛//8
	StringBuffer foodSourtasteData=new StringBuffer();//신맛//9
	StringBuffer foodSweetAndSaltyData=new StringBuffer();//단짠//10
	StringBuffer foodSourceData=new StringBuffer();//출처//11
	/*음식*/
	StringBuffer movieNameData=new StringBuffer();//1//<1
	StringBuffer movieLinkData=new StringBuffer();//2영화정보링크
	StringBuffer movieImageData=new StringBuffer();//3영화이미지링크
	StringBuffer moviePubDateData=new StringBuffer();//4영화개봉일<3
	StringBuffer movieDirectorData=new StringBuffer();//5영화감독<4
	StringBuffer movieActorData=new StringBuffer();//6영화출연진<5
	StringBuffer movieUserRatingData=new StringBuffer();//7영화평점
	StringBuffer movieGenreData=new StringBuffer();//8영화장르<2
	/*영화*/
	
	
	/*음식*/
	for(int i=0;i<foodNumber.length;i++){
		foodIndexData.append(foodList.get(foodNumber[i]).getFindex()+",");//1
		foodNameData.append(foodList.get(foodNumber[i]).getFname()+",");//2
		foodOneservingData.append(foodList.get(foodNumber[i]).getFoneserving()+",");//3
		foodKcalData.append(foodList.get(foodNumber[i]).getFkcal()+",");//4
		foodBitternessData.append(foodList.get(foodNumber[i]).getFbitterness()+",");//5
		foodUmamiData.append(foodList.get(foodNumber[i]).getFumami()+",");//6
		foodSaltyData.append(foodList.get(foodNumber[i]).getFsalty()+",");//7
		foodSweetnessData.append(foodList.get(foodNumber[i]).getFsweetness()+",");//8
		foodSourtasteData.append(foodList.get(foodNumber[i]).getFsourtaste()+",");//9
		foodSweetAndSaltyData.append(foodList.get(foodNumber[i]).getFsweetandsalty()+",");//10
		foodSourceData.append(foodList.get(foodNumber[i]).getFsource().replaceAll("'", "")+",");//11
	}

	System.out.println("1==========================================================");
	/*영화*/
	System.out.println(movieList.get(0).getMvname());
	for(int i=0;i<movieList.size();i++){

		movieNameData.append(movieList.get(i).getMvname()+",");
		movieLinkData.append(movieList.get(i).getMvlink()+",");
		movieImageData.append(movieList.get(i).getMvimage()+",");
		moviePubDateData.append(movieList.get(i).getMvpubDate()+",");
		movieDirectorData.append(movieList.get(i).getMvdirector()+",");
		movieActorData.append(movieList.get(i).getMvactor()+",");
		movieUserRatingData.append(movieList.get(i).getMvuserRating()+",");
		movieGenreData.append(movieList.get(i).getMvgenre()+",");
	}
	System.out.println("2==========================================================");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<head>\r\n");
      out.write("<title>testProject</title>\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<!-- 디바이스에 최적화된 크기로 출력됨 -->\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\r\n");
      out.write("      maximum-scale=1.0, minimum-scale=1.0, user-scalable=no\">\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\t#line2 > th > span > span > a >img{width:150px; height:200px;}\r\n");
      out.write("\t#line3 > th > span > span > a >img{width:150px; height:200px;}\r\n");
      out.write("#nameList{\r\n");
      out.write("\tfont-size: 17px\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#lineList {\r\n");
      out.write("    border-bottom: 1px solid Gainsboro ;\r\n");
      out.write("    padding: 0px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#infoList{\r\n");
      out.write("\tfont-size: 15px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<!-- \r\n");
      out.write("\t<link href=\"/css/demo.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("-->\r\n");
      out.write("\t");
      if (_jspx_meth_spring_005furl_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      out.write('	');
      if (_jspx_meth_spring_005furl_005f1(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      out.write('	');
      if (_jspx_meth_spring_005furl_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${jqbarCss}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("?ver=3\" rel=\"stylesheet\"/>\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("(function ($) {\r\n");
      out.write("    $.fn.extend({\r\n");
      out.write("        jqbar: function (options) {\r\n");
      out.write("            var settings = $.extend({\r\n");
      out.write("                animationSpeed: 2000,\r\n");
      out.write("                barLength: 200,\r\n");
      out.write("                orientation: 'h',\r\n");
      out.write("                barWidth: 50,\r\n");
      out.write("                barColor: 'red',\r\n");
      out.write("                label: '&nbsp;',\r\n");
      out.write("                value: 100\r\n");
      out.write("            }, options);\r\n");
      out.write("            return this.each(function () {\r\n");
      out.write("\r\n");
      out.write("                var valueLabelHeight = 0;\r\n");
      out.write("                var progressContainer = $(this);\r\n");
      out.write("                if (settings.orientation == 'h') {\r\n");
      out.write("\r\n");
      out.write("                    progressContainer.addClass('jqbar horizontal').append('<span class=\"bar-label\"></span><span class=\"bar-level-wrapper\"><span class=\"bar-level\"></span></span><span class=\"bar-percent\"></span>');\r\n");
      out.write("\r\n");
      out.write("                    var progressLabel = progressContainer.find('.bar-label').html(settings.label);\r\n");
      out.write("                    var progressBar = progressContainer.find('.bar-level').attr('data-value', settings.value);\r\n");
      out.write("                    var progressBarWrapper = progressContainer.find('.bar-level-wrapper');\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("                    progressBar.css({ height: settings.barWidth, width: 0, backgroundColor: settings.barColor });\r\n");
      out.write("\r\n");
      out.write("                    var valueLabel = progressContainer.find('.bar-percent');\r\n");
      out.write("                    valueLabel.html('0');\r\n");
      out.write("                }\r\n");
      out.write("                else {\r\n");
      out.write("\r\n");
      out.write("                    progressContainer.addClass('jqbar vertical').append('<span class=\"bar-percent\"></span><span class=\"bar-level-wrapper\"><span class=\"bar-level\"></span></span><span class=\"bar-label\"></span>');\r\n");
      out.write("\r\n");
      out.write("                    var progressLabel = progressContainer.find('.bar-label').html(settings.label);\r\n");
      out.write("                    var progressBar = progressContainer.find('.bar-level').attr('data-value', settings.value);\r\n");
      out.write("                    var progressBarWrapper = progressContainer.find('.bar-level-wrapper');\r\n");
      out.write("                    progressContainer.css('height', settings.barLength);\r\n");
      out.write("                    progressBar.css({ height: settings.barLength, top: settings.barLength, width: settings.barWidth, backgroundColor: settings.barColor });\r\n");
      out.write("                    progressBarWrapper.css({ height: settings.barLength, width: settings.barWidth });\r\n");
      out.write("\r\n");
      out.write("                    var valueLabel = progressContainer.find('.bar-percent');\r\n");
      out.write("                    valueLabel.html('0');\r\n");
      out.write("                    valueLabelHeight = parseFloat(valueLabel.outerHeight()).toFixed(2);\r\n");
      out.write("                    valueLabel.css({ top: (settings.barLength - valueLabelHeight) + 'px' });\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                animateProgressBar(progressBar);\r\n");
      out.write("\r\n");
      out.write("                function animateProgressBar(progressBar) {\r\n");
      out.write("\r\n");
      out.write("                    var level = parseFloat(progressBar.attr('data-value'))+30;\r\n");
      out.write("                    if (level > 100) {\r\n");
      out.write("                        level = 100;\r\n");
      out.write("                        //alert('max value cannot exceed 100 percent');\r\n");
      out.write("                    }\r\n");
      out.write("                    var w = settings.barLength * level / 100;\r\n");
      out.write("\r\n");
      out.write("                    if (settings.orientation == 'h') {\r\n");
      out.write("                        progressBar.animate({ width: w }, {\r\n");
      out.write("                            duration: 2000,\r\n");
      out.write("                            step: function (currentWidth) {\r\n");
      out.write("                                var percent = parseInt(currentWidth / settings.barLength * 100);\r\n");
      out.write("                                if (isNaN(percent))\r\n");
      out.write("                                    percent = 0;\r\n");
      out.write("                                progressContainer.find('.bar-percent').html(percent + '%');\r\n");
      out.write("                            }\r\n");
      out.write("                        });\r\n");
      out.write("                    }\r\n");
      out.write("                    else {\r\n");
      out.write("\r\n");
      out.write("                        var h = settings.barLength - settings.barLength * level / 100;\r\n");
      out.write("                        progressBar.animate({ top: h }, {\r\n");
      out.write("                            duration: 2000,\r\n");
      out.write("                            step: function (currentValue) {\r\n");
      out.write("                                var percent = parseFloat((parseFloat(settings.barLength).toFixed(2) - parseFloat(currentValue)).toFixed(2) / parseFloat(settings.barLength).toFixed(2) * 100).toFixed(2);\r\n");
      out.write("                                if (isNaN(percent))\r\n");
      out.write("                                    percent = 0;\r\n");
      out.write("                                progressContainer.find('.bar-percent').html(Math.abs(percent-30).toFixed(2) + '%');\r\n");
      out.write("                                //alert(progressBar.attr('data-value'));\r\n");
      out.write("                            }\r\n");
      out.write("                        });\r\n");
      out.write("\r\n");
      out.write("                        progressContainer.find('.bar-percent').animate({ top: (h - valueLabelHeight) }, 2000);\r\n");
      out.write("\r\n");
      out.write("                    }\r\n");
      out.write("                    \r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("})(jQuery);\r\n");
      out.write("\r\n");
      out.write("\t$(document).ready(function () {\r\n");
      out.write("\r\n");
      out.write("\t\tvar emotion=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${emotionText}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\tvar emotionData=emotion.split(',');\r\n");
      out.write("\t\t//alert(emotion);\r\n");
      out.write("\t\t//alert(emotionTest[0].substring(1,emotionTest[0].indexOf(\":\")))\r\n");
      out.write("\t\t//alert(emotionTest[0].substring(emotionTest[0].indexOf(\":\")+1,emotionTest[0].length-1))\r\n");
      out.write("\t\t//alert(\"1순위>>>\"emotionTest[0].substring(0, emotionTest[0].indexOf(':'))\r\n");
      out.write("\t\t//alert(\"1순위 점수\"+emotionTest[0].substring(emotionTest[0].indexOf(':')+1,emotionTest[0].length))\r\n");
      out.write("\t\t//$('#bar-1').jqbar({ label: 'ASP.NET', value: 99, barColor: '#D64747' });\r\n");
      out.write("\t\t//$('#bar-2').jqbar({ label: 'C#', value: 99, barColor: '#FF681F' });\r\n");
      out.write("\t\t//$('#bar-3').jqbar({ label: 'Javascript', value: 90, barColor: '#ea805c' });\r\n");
      out.write("\t\t//$('#bar-4').jqbar({ label: 'HTML5', value: 50, barColor: '#88bbc8' });\r\n");
      out.write("\t\t//$('#bar-5').jqbar({ label: 'CSS3', value: 60, barColor: '#939393' });\r\n");
      out.write("\t\t//$('#bar-6').jqbar({ label: 'jQuery', value: 70, barColor: '#3a89c9' });\r\n");
      out.write("\t\t$('#bar-1').jqbar({ label: emotionData[0].substring(1, emotionData[0].indexOf(':')),\r\n");
      out.write("\t\t\t\t\t\t\tbarColor: '#D64747', value: emotionData[0].substring(emotionData[0].indexOf(':')+1,emotionData[0].length-1), orientation: 'v' });\r\n");
      out.write("\t\t$('#bar-2').jqbar({ label: emotionData[1].substring(1, emotionData[1].indexOf(':')), \r\n");
      out.write("\t\t\t\t\t\t\tbarColor: '#FF681F', value: emotionData[1].substring(emotionData[1].indexOf(':')+1,emotionData[1].length-1), orientation: 'v' });\r\n");
      out.write("\t\t$('#bar-3').jqbar({ label: emotionData[2].substring(1, emotionData[2].indexOf(':')), \r\n");
      out.write("\t\t\t\t\t\t\tbarColor: '#ea805c', value: emotionData[2].substring(emotionData[2].indexOf(':')+1,emotionData[2].length-1), orientation: 'v' });\r\n");
      out.write("\t\t$('#bar-4').jqbar({ label: emotionData[3].substring(1, emotionData[3].indexOf(':')), \r\n");
      out.write("\t\t\t\t\t\t\tbarColor: '#88bbc8', value: emotionData[3].substring(emotionData[3].indexOf(':')+1,emotionData[3].length-1), orientation: 'v' });\r\n");
      out.write("\t\t$('#bar-5').jqbar({ label: emotionData[4].substring(1, emotionData[4].indexOf(':')), \r\n");
      out.write("\t\t\t\t\t\t\tbarColor: '#939393', value: emotionData[4].substring(emotionData[4].indexOf(':')+1,emotionData[4].length-1), orientation: 'v' });\r\n");
      out.write("\t\t$('#bar-6').jqbar({ label: emotionData[5].substring(1, emotionData[5].indexOf(':')), \r\n");
      out.write("\t\t\t\t\t\t\tbarColor: '#3a89c9', value: emotionData[5].substring(emotionData[5].indexOf(':')+1,emotionData[5].length-1), orientation: 'v' });\r\n");
      out.write("\t\temo_food();\r\n");
      out.write("\t\temo_movie();\r\n");
      out.write("\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\tfunction emo_food(){\r\n");
      out.write("\t\t//var foods_emo= [[\"chicken\", \"pizza\", \"seolleongtang\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]];\r\n");
      out.write("\t\t//var foods = foods_emo[emo];\r\n");
      out.write("\t\tvar foodIndex='");
      out.print(foodIndexData);
      out.write("';\r\n");
      out.write("\t\tvar foodName='");
      out.print(foodNameData);
      out.write("';\r\n");
      out.write("\t\tvar foodOneserving='");
      out.print(foodOneservingData);
      out.write("';\r\n");
      out.write("\t\tvar foodKcal='");
      out.print(foodKcalData);
      out.write("';\r\n");
      out.write("\t\tvar foodBitterness='");
      out.print(foodBitternessData);
      out.write("';\r\n");
      out.write("\t\tvar foodUmami='");
      out.print(foodUmamiData);
      out.write("';\r\n");
      out.write("\t\tvar foodSalty='");
      out.print(foodSaltyData);
      out.write("';\r\n");
      out.write("\t\tvar foodSweetness='");
      out.print(foodSweetnessData);
      out.write("';\r\n");
      out.write("\t\tvar foodSourtaste='");
      out.print(foodSourtasteData);
      out.write("';\r\n");
      out.write("\t\tvar foodSource='");
      out.print(foodSourceData);
      out.write("';\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfoodIndex=foodIndex.substring(0,foodIndex.length-1).split(',');\r\n");
      out.write("\t\tfoodName=foodName.substring(0,foodName.length-1).split(',');\r\n");
      out.write("\t\tfoodOneserving=foodOneserving.substring(0,foodOneserving.length-1).split(',');\r\n");
      out.write("\t\tfoodKcal=foodKcal.substring(0,foodKcal.length-1).split(',');\r\n");
      out.write("\t\tfoodBitterness=foodBitterness.substring(0,foodBitterness.length-1).split(',');\r\n");
      out.write("\t\tfoodUmami=foodUmami.substring(0,foodUmami.length-1).split(',');\r\n");
      out.write("\t\tfoodSalty=foodSalty.substring(0,foodSalty.length-1).split(',');\r\n");
      out.write("\t\tfoodSweetness=foodSweetness.substring(0,foodSweetness.length-1).split(',');\r\n");
      out.write("\t\tfoodSourtaste=foodSourtaste.substring(0,foodSourtaste.length-1).split(',');\r\n");
      out.write("\t\tfoodSource=foodSource.substring(0,foodSource.length-1).split(',');\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tlen = foodIndex.length;\r\n");
      out.write("\t\tfor(var i=0; i<len; i++){\r\n");
      out.write("\t\t\tvar food = foodName[i];\r\n");
      out.write("\t\t\tvar foodInfo=\"<td align='left'><p><b><span id='lineList'><span id='nameList'>\"+foodName[i]+\"</span></span></b><br><br><span id='infoList'>1회 제공량 : \"+foodOneserving[i]+\"<br>칼로리(100g당) : \"+foodKcal[i]+\"kcal<br>쓴맛/담백함 : \"+\r\n");
      out.write("\t\t\t\t\t\tfoodBitterness[i]+\"/5<br>감칠맛 : \"+foodUmami[i]+\"/5<br>짠맛 : \"+foodSalty[i]+\"/5<br>단맛 : \"+\r\n");
      out.write("\t\t\t\t\t\tfoodSweetness[i]+\"/5<br>신맛 : \"+foodSourtaste[i]+\"/5</span></p></td>\";\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar ss = \"<th><span id='food_wrap'>\" +\r\n");
      out.write("\t\t\t\t     \t\"<span id=food_wrapImg><a href='../review/test1.ggd?food=\"+food+\"'>\"+\r\n");
      out.write("\t\t\t\t\t\t\t\"<img src='/springProject/img/\"+foodIndex[i]+\".jpg' align='top'></a></span>\"+\r\n");
      out.write("\t\t\t\t\t\t\t\"<span id=food_text>\"+foodInfo+\"</span></th>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\";\t\r\n");
      out.write("\t\t\t\t\t\t\t//'spring:url value=/resources/img/'\"+foods[i]+\".jpg'>\"+foods[i];\r\n");
      out.write("\t\t\t\t\t\t\t\t//'/img/\"+foods[i]+\".jpg'>\"+foods[i]+\r\n");
      out.write("\t\t\t$(\"#line2\").append(ss);\r\n");
      out.write("\t\t\tif(i>3){break;}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction emo_movie(){\r\n");
      out.write("\r\n");
      out.write("\t\tvar movieName='");
      out.print(movieNameData);
      out.write("';\r\n");
      out.write("\t\tvar movieLink='");
      out.print(movieLinkData);
      out.write("';\r\n");
      out.write("\t\tvar movieImage='");
      out.print(movieImageData);
      out.write("';\r\n");
      out.write("\t\tvar moviePubDate='");
      out.print(moviePubDateData);
      out.write("';\r\n");
      out.write("\t\tvar movieDirector='");
      out.print(movieDirectorData);
      out.write("';\r\n");
      out.write("\t\tvar movieActor='");
      out.print(movieActorData);
      out.write("';\r\n");
      out.write("\t\tvar movieUserRating='");
      out.print(movieUserRatingData);
      out.write("';\r\n");
      out.write("\t\tvar movieGenre='");
      out.print(movieGenreData);
      out.write("';\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tmovieName=movieName.substring(0,movieName.length-1).split(',');\r\n");
      out.write("\t\tmovieLink=movieLink.substring(0,movieLink.length-1).split(',');\r\n");
      out.write("\t\tmovieImage=movieImage.substring(0,movieImage.length-1).split(',');\r\n");
      out.write("\t\tmoviePubDate=moviePubDate.substring(0,moviePubDate.length-1).split(',');\r\n");
      out.write("\t\tmovieDirector=movieDirector.substring(0,movieDirector.length-1).split(',');\r\n");
      out.write("\t\tmovieActor=movieActor.substring(0,movieActor.length-1).split(',');\r\n");
      out.write("\t\tmovieUserRating=movieUserRating.substring(0,movieUserRating.length-1).split(',');\r\n");
      out.write("\t\tmovieGenre=movieGenre.substring(0,movieGenre.length-1).split(',');\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tlen = movieImage.length;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfor(var i=0; i<len; i++){\r\n");
      out.write("\t\t\tvar movie = movieImage[i];\r\n");
      out.write("\t\t\tvar movieInfo=\"<td align='left'><p><span id='nameList'><b><a href='\"+movieLink[i]+\"' style='color:black'>\"+movieName[i]+\"</a></b></span><br><span id='lineList'><span id='infoList'>\"+movieGenre[i]+\"<br></span></span><br><span id='infoList'>제작년도 : \"+moviePubDate[i]+\"<br>감독 : \"+\r\n");
      out.write("\t\t\t\t\t\t\tmovieDirector[i].replaceAll(\"|\",\",\").substring(0,movieDirector[i].length-1)+\"<br>출연진 : \"+movieActor[i].replaceAll(\"|\",\",\").substring(0,movieDirector[i].length-1)+\"<br>평점 : \"+movieUserRating[i]+\"</span></p></td>\";\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(movieImage[i]==\"\"){\r\n");
      out.write("\t\t\t\tmovieImage[i]=\"/springProject/noimage/noimage.gif\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar ss = \"<th><span id='movie_wrap'>\" +\r\n");
      out.write("\t\t\t\t\t     \t\"<span id=movie_wrapImg><a href='\"+movieLink[i]+\"' target='_blank'>\"+\r\n");
      out.write("\t\t\t\t\t\t\t\t\"<img src='\"+movieImage[i]+\"' align='top'></a></span>\"+\r\n");
      out.write("\t\t\t\t\t\t\t\t\"<span id=movie_text>\"+movieInfo+\"</span></th>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\";\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t//'spring:url value=/resources/img/'\"+foods[i]+\".jpg'>\"+foods[i];\r\n");
      out.write("\t\t\t\t\t\t\t\t//'/img/\"+foods[i]+\".jpg'>\"+foods[i]+\r\n");
      out.write("\t\t\t\t$(\"#line3\").append(ss);\r\n");
      out.write("\t\t\tif(i>3){break;}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("</script>\t\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<hr>\r\n");
      out.write("\t<div align=\"center\">\r\n");
      out.write("\t\t<h3>당신의 감정 구성</h3>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<br><!-- \r\n");
      out.write("\t<div align=\"center\">\r\n");
      out.write("\t\t<h4>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${textData}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h4>\r\n");
      out.write("\t</div>-->\r\n");
      out.write("\t\r\n");
      out.write("\t<div align=\"center\">\r\n");
      out.write("\t\t<div id=\"bar-1\"></div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t\t<div id=\"bar-2\"></div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t\t<div id=\"bar-3\"></div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t\t<div id=\"bar-4\"></div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t\t<div id=\"bar-5\"></div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t\t<div id=\"bar-6\"></div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<br><br><br><br><br><br><br>\r\n");
      out.write("\t<hr>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<div align=\"right\">\r\n");
      out.write("\t\t<a href=\"\">더보기</a>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t<h3 align=center>음식 추천</h3>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<div id=\"line2\" align=\"center\">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<hr>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<div align=\"right\">\r\n");
      out.write("\t\t<a href=\"\">더보기</a>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t<h3 align=center>영화 추천</h3>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<div id=\"line3\" align=\"center\">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_spring_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:url
    org.springframework.web.servlet.tags.UrlTag _jspx_th_spring_005furl_005f0 = (org.springframework.web.servlet.tags.UrlTag) _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody.get(org.springframework.web.servlet.tags.UrlTag.class);
    boolean _jspx_th_spring_005furl_005f0_reused = false;
    try {
      _jspx_th_spring_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_spring_005furl_005f0.setParent(null);
      // /WEB-INF/view/emotion/emotionpage.jsp(109,1) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005furl_005f0.setValue("/include/css/jqbar.css");
      // /WEB-INF/view/emotion/emotionpage.jsp(109,1) name = var type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005furl_005f0.setVar("jqbarCss");
      int[] _jspx_push_body_count_spring_005furl_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005furl_005f0 = _jspx_th_spring_005furl_005f0.doStartTag();
        if (_jspx_th_spring_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005furl_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005furl_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005furl_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_spring_005furl_005f0);
      _jspx_th_spring_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_spring_005furl_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005furl_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:url
    org.springframework.web.servlet.tags.UrlTag _jspx_th_spring_005furl_005f1 = (org.springframework.web.servlet.tags.UrlTag) _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody.get(org.springframework.web.servlet.tags.UrlTag.class);
    boolean _jspx_th_spring_005furl_005f1_reused = false;
    try {
      _jspx_th_spring_005furl_005f1.setPageContext(_jspx_page_context);
      _jspx_th_spring_005furl_005f1.setParent(null);
      // /WEB-INF/view/emotion/emotionpage.jsp(110,1) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005furl_005f1.setValue("/include/js/jqbar.js");
      // /WEB-INF/view/emotion/emotionpage.jsp(110,1) name = var type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005furl_005f1.setVar("jqbarJs");
      int[] _jspx_push_body_count_spring_005furl_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005furl_005f1 = _jspx_th_spring_005furl_005f1.doStartTag();
        if (_jspx_th_spring_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005furl_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005furl_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005furl_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_spring_005furl_005f1);
      _jspx_th_spring_005furl_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005furl_005f1, _jsp_getInstanceManager(), _jspx_th_spring_005furl_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005furl_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:url
    org.springframework.web.servlet.tags.UrlTag _jspx_th_spring_005furl_005f2 = (org.springframework.web.servlet.tags.UrlTag) _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody.get(org.springframework.web.servlet.tags.UrlTag.class);
    boolean _jspx_th_spring_005furl_005f2_reused = false;
    try {
      _jspx_th_spring_005furl_005f2.setPageContext(_jspx_page_context);
      _jspx_th_spring_005furl_005f2.setParent(null);
      // /WEB-INF/view/emotion/emotionpage.jsp(111,1) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005furl_005f2.setValue("/include/js/jquery.min.js");
      // /WEB-INF/view/emotion/emotionpage.jsp(111,1) name = var type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005furl_005f2.setVar("jquery");
      int[] _jspx_push_body_count_spring_005furl_005f2 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005furl_005f2 = _jspx_th_spring_005furl_005f2.doStartTag();
        if (_jspx_th_spring_005furl_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005furl_005f2[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005furl_005f2.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005furl_005f2.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_spring_005furl_005f2);
      _jspx_th_spring_005furl_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005furl_005f2, _jsp_getInstanceManager(), _jspx_th_spring_005furl_005f2_reused);
    }
    return false;
  }
}
